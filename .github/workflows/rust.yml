on: pull_request

name: Continuous Integration

jobs:
  grcov:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-07
          profile: minimal
          components: clippy, rustc-dev, llvm-tools-preview

      - name: Cache Cargo
        if: steps.filter.outputs.rust == 'true'
        uses: actions/cache@v3.0.5
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Clippy
        uses: actions-rs/clippy@master
        with:
          args: --all-features --all-targets -- -D warnings

      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all -- --test-threads=1
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests"
      - uses: actions-rs/grcov@v0.1

      - name: Run grcov
        run: |
          zip -0 cov.zip $(find . -name "mirai*.gc*" -print)
          grcov cov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Upload coverage data to codecov.io
        uses: codecov/codecov-action@v1
        with:
          files: "lcov.info"

  mirai_on_mirai_macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-07
          profile: minimal
          components: clippy, rustc-dev, llvm-tools-preview

      - name: Cache Cargo
        if: steps.filter.outputs.rust == 'true'
        uses: actions/cache@v3.0.5
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install MIRAI
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path ./checker

      - name: Run MIRAI on MIRAI
        run: |
          cargo mirai

  mirai_on_mirai_ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-07
          profile: minimal
          components: clippy, rustc-dev, llvm-tools-preview

      - name: Cache Cargo
        if: steps.filter.outputs.rust == 'true'
        uses: actions/cache@v3.0.5
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install MIRAI
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path ./checker --no-default-features

      - name: Run MIRAI on MIRAI
        run: |
          cargo mirai

  mirai_on_mirai_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-07-07
          profile: minimal
          components: clippy, rustc-dev, llvm-tools-preview

      - name: Cache Cargo
        if: steps.filter.outputs.rust == 'true'
        uses: actions/cache@v3.0.5
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install MIRAI
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path ./checker --no-default-features

      - name: Run MIRAI on MIRAI
        run: |
          cargo mirai

